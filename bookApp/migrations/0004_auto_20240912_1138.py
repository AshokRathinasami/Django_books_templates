# Generated by Django 5.1 on 2024-09-12 11:38

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.contrib.auth.management import create_permissions


def force_create_permissions(apps, schema_editor):
    """creates permissions without waiting for post_migrate signal
    """
    for app_config in apps.get_app_configs():
        app_config.models_module = True
        create_permissions(app_config, apps=apps, verbosity=0)
        app_config.models_module = None



def createGroup(apps, schema_editor):
    ## Group-1 (seller)----->>

    # Creating group
    sellerGroup, created = Group.objects.get_or_create(name='seller')

    # Permissions for the seller group
    add_book_permission = Permission.objects.get(codename='add_book')
    change_book_permission = Permission.objects.get(codename='change_book')
    delete_book_permission = Permission.objects.get(codename='delete_book')

    sellerGroup.permissions.add(add_book_permission, change_book_permission, delete_book_permission)

    ## Group-2 (buyer)------>>

    # Creating group
    buyerGroup, created = Group.objects.get_or_create(name='buyer')

    # Permission for the buyer group
    viewBookPermission = Permission.objects.get(codename='view_book')

    # Assign permission to the buyer group
    buyerGroup.permissions.add(viewBookPermission)


def remove_groups_and_permissions(apps, schema_editor):
    Group.objects.filter(name='seller').delete()
    Group.objects.filter(name='buyer').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('bookApp', '0003_rename_books_book'),
    ]

    operations = [
        migrations.RunPython(force_create_permissions, migrations.RunPython.noop),
        migrations.RunPython(createGroup, remove_groups_and_permissions),
    ]
